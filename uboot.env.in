auth_os=auth_cntr ${cntr_addr}
baudrate=115200
board_name=MEK
board_rev=iMX8QM
boot_fdt=try
boot_os=booti ${loadaddr} - ${fdt_addr};
bootcmd=mmc dev ${mmcdev}; if echo rescan mmc; mmc rescan; then if run loadbootscript; then run bootscript; else if test ${sec_boot} = yes; then if run loadcntr; then run mmcboot; else run netboot; fi; else if run loadimage; then run mmcboot; else run netboot; fi; fi; fi; else booti ${loadaddr} - ${fdt_addr}; fi
bootcmd_mfg=run mfgtool_args;if iminfo ${initrd_addr}; then if test ${tee} = yes; then bootm ${tee_addr} ${initrd_addr} ${fdt_addr}; else booti ${loadaddr} ${initrd_addr} ${fdt_addr}; fi; else echo "Run fastboot ..."; fastboot auto; fi;
bootdelay=3
bootscript=echo Running bootscript from mmc ...; source
cntr_addr=0x98000000
cntr_file=os_cntr_signed.bin
console=ttyLP0
dom0fdt_file=imx8qm-mek-dom0.dtb
domu-android-auto=no
emmc_dev=0
eth1addr=00:04:9f:06:5a:7d
ethact=ethernet@5b040000
ethaddr=00:04:9f:06:5a:7c
ethprime=eth0
fastboot_dev=mmc1
fdt_addr=0x83000000
fdt_file=imx8qm-mek.dtb
#fdt_file=imx8qm-dn-vehicle.dtb
fdt_high=0xffffffffffffffff
fdtcontroladdr=84e0ba70
hdp_addr=0x9c000000
hdp_file=hdmitxfw.bin
hdprx_addr=0x9c800000
hdprx_file=hdmirxfw.bin
image=Image
initrd_addr=0x83100000
initrd_high=0xffffffffffffffff
jh_mmcboot=echo Point1;setenv fdt_file imx8qm-mek-root.dtb;setenv boot_os 'scu_rm dtb ${fdt_addr}; booti ${loadaddr} - ${fdt_addr};'; run mmcboot; 
jh_netboot=echo Point2;setenv fdt_file imx8qm-mek-root.dtb;setenv boot_os 'scu_rm dtb ${fdt_addr}; booti ${loadaddr} - ${fdt_addr};'; run netboot; 
kboot=booti 
loadaddr=0x80280000
loadbootscript=echo ...loading boot script...; fatload mmc ${mmcdev}:${mmcpart} ${loadaddr} ${script};
loadcntr=echo .... loading cntr....  ; fatload mmc ${mmcdev}:${mmcpart} ${cntr_addr} ${cntr_file}
loadfdt=echo ...loading ftd.... ; fatload mmc ${mmcdev}:${mmcpart} ${fdt_addr} ${fdt_file}
loadhdp=fatload mmc ${mmcdev}:${mmcpart} ${hdp_addr} ${hdp_file}
loadhdprx=fatload mmc ${mmcdev}:${mmcpart} ${hdprx_addr} ${hdprx_file}
loadimage=echo ...loading image file...; fatload mmc ${mmcdev}:${mmcpart} ${loadaddr} ${image}
loadm4image_0=fatload mmc ${mmcdev}:${mmcpart} ${loadaddr} ${m4_0_image}
loadm4image_1=fatload mmc ${mmcdev}:${mmcpart} ${loadaddr} ${m4_1_image}
m4_0_image=m4_0.bin
m4_1_image=m4_1.bin
m4boot_0=run loadm4image_0; dcache flush; bootaux ${loadaddr} 0
m4boot_1=run loadm4image_1; dcache flush; bootaux ${loadaddr} 1
mfgtool_args=setenv bootargs console=${console},${baudrate} rdinit=/linuxrc clk_ignore_unused 
mmcargs=setenv bootargs console=${console},${baudrate} earlycon root=${mmcroot}
mmcautodetect=yes
mmcboot=echo Booting from mmc ...; if run loadhdp; then; hdp load ${hdp_addr}; fi;run mmcargs; if test ${sec_boot} = yes; then if run auth_os; then run boot_os; else echo ERR: failed to authenticate; fi; else if test ${boot_fdt} = yes || test ${boot_fdt} = try; then if run loadfdt; then run boot_os; else echo WARN: Cannot load the DT; fi; else echo wait for boot; fi;fi;
mmcdev=1
mmcpart=1
mmcroot=/dev/mmcblk1p2 rootwait rw
nandfit_part=yes
netargs=setenv bootargs console=${console},${baudrate} earlycon root=/dev/nfs ip=dhcp nfsroot=${serverip}:${nfsroot},v3,tcp
netboot=echo Booting from net hiro modifies the message...; run netargs;  if test ${ip_dyn} = yes; then setenv get_cmd dhcp; else setenv get_cmd tftp; fi; if ${get_cmd} ${hdp_addr} ${hdp_file}; then; hdp load ${hdp_addr}; fi;if test ${sec_boot} = yes; then ${get_cmd} ${cntr_addr} ${cntr_file}; if run auth_os; then run boot_os; else echo ERR: failed to authenticate; fi; else ${get_cmd} ${loadaddr} ${image}; if test ${boot_fdt} = yes || test ${boot_fdt} = try; then if ${get_cmd} ${fdt_addr} ${fdt_file}; then run boot_os; else echo WARN: Cannot load the DT; fi; else booti; fi;fi;
script=boot.scr
sd_dev=1
sec_boot=no
serial#=1016b00e82894a94
soc_type=imx8qm
splashimage=0x9e000000
xenboot_common=${get_cmd} ${loadaddr} xen;${get_cmd} ${fdt_addr} ${dom0fdt_file};if ${get_cmd} ${hdp_addr} ${hdp_file}; then; hdp load ${hdp_addr}; fi;${get_cmd} ${xenlinux_addr} ${image};fdt addr ${fdt_addr};fdt resize 256;fdt set /chosen/module@0 reg <0x00000000 ${xenlinux_addr} 0x00000000 0x${filesize}>; fdt set /chosen/module@0 bootargs "${bootargs} ${xenlinux_bootargs}"; if test ${domu-android-auto} = yes; then; fdt set /domu/doma android-auto <1>;fdt rm /gpio@5d090000 power-domains;fi;setenv bootargs ${xenhyper_bootargs};booti ${loadaddr} - ${fdt_addr};
xenhyper_bootargs=console=dtuart dom0_mem=2048M dom0_max_vcpus=2 dom0_vcpus_pin=true hmp-unsafe=true
xenlinux_addr=0x9e000000
xenlinux_bootargs= 
xenlinux_console=hvc0 earlycon=xen
xenmmcboot=setenv get_cmd "fatload mmc ${mmcdev}:${mmcpart}";setenv console ${xenlinux_console};run mmcargs;run xenboot_common;
xennetboot=setenv get_cmd dhcp;setenv console ${xenlinux_console};run netargs;run xenboot_common;





























































































































































































































































































































































































































































































































































































































































































































































































































